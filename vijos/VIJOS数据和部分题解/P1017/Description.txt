    Maple博士发明了一个对表达式进行操作的函数op(i,e)。其描述如下：
    e是要操作的表达式。函数要将表达式分成若干个优先级最低的子表达式。例如：a*b+b*c+c*d经操作后变成了三个式子a*b,b*c,c*d，因为‘+’的优先级是最低的。函数先要把表达式做如上分离，再按次序取其中的第i个式子。例 如：op(2,a*b+b*c+c*d)=b*c.
    很显然，这个函数有时是层层调用的，如：
    p:=a^b*c+(d*c)^f*z+b
    op(1,op(1,op(2,p)))=(d*c)  
    op(1,op(1,op(1,op(2,p))))=d*c
    op(2,op(2,p))=z
    op(3,p)=b
    op(1,op(3,p))=b
    Maple博士很懒，他把这任务交给了你，让你编出一个程序。
    注：在本题中认为(a+b)(b+c)为合法表达式，若p:=(a+b)(b+c)则op(1,p)=a+b;而p:=(a+b)+(b+c)则op(1,p)=(a+b)
