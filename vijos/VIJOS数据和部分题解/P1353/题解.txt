分析这道题，首先可以很容易找到规律：
如果n是质数，那么Fibonacci数列的第n项也是质数（n>3），n<=3的情况讨论一下就是。
主要问题转化为如何快速判断一个数是否是质数。
我们首先想到筛选法打一张质数表，显然目前用普通机子这张表打不开。。。
然后我们也很容易想到O(m * sqrt(n))的算法(可以对3个点(n<=1000))：
把每个数从2到sqrt(n)除一遍即可。
当然这超时(m = 20000, n = 2^31)最大时间复杂度O(20000 * 2^15)。
我们需要找更好的算法。
引入费马小定律：
如果a^(n-1) mod n = 1, 那么n几乎肯定是素数。
因此只用随机选k个底数a检验即可（这里是常数级别, 建议k = 5）。
这时的时间复杂度位O(m * n),怎样把乘方取模的时间复杂度降下来呢？
把n-1变为：a1*2^i1 + a2*2^i2 + ....
而a^(2^(i+1)) mod n = (a^(2^i) mod n)^2 mod n。
因此检验的时间复杂度为log级别的了。
这题就用O(m * logn * k)的时间复杂度解决了。